        -:    0:Source:pipeline.hpp
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:1
        -:    1:#include "active_object.hpp"
        -:    2:
        -:    3:typedef void (*taskFunc)(int id);
        -:    4:
        -:    5:class PipeLine{
        -:    6:public:
        -:    7:    vector<ActiveObject> pipes;
        -:    8:	int n;
        1:    9:	PipeLine(int n){
        1:   10:		this->n = n;
        5:   11:		for (int i = 0; i < n; i++){
        4:   12:			this->pipes.push_back(ActiveObject(i));
        -:   13:		}
        1:   14:	}
        -:   15:
        1:   16:	void start(taskFunc func){
        5:   17:		for (int i = 0; i < this->n; i++){
        4:   18:			this->pipes[i].request(func);
        4:   19:			this->pipes[i].start();
        -:   20:		}
        1:   21:	}
        -:   22:
        1:   23:	void join(){
        5:   24:        for (int i = 0; i < this->n; i++){
        4:   25:            this->pipes[i].join();
        -:   26:        }
        1:   27:    }
        -:   28:};
